CREATE TABLE BASKET_A (A INT PRIMARY KEY,
    				   FRUIT_A VARCHAR (100) NOT NULL);

CREATE TABLE BASKET_B (B INT PRIMARY KEY,
   					   FRUIT_B VARCHAR (100) NOT NULL);
					   
INSERT INTO BASKET_A (A, FRUIT_A) 
VALUES (1, 'APPLE'),
       (2, 'ORANGE'),
       (3, 'BANANA'),
       (4, 'CUCUMBER');
	  
INSERT INTO BASKET_B (B, FRUIT_B)
VALUES (1, 'ORANGE'),
       (2, 'APPLE'),
       (3, 'WATERMELON'),
       (4, 'PEAR');

SELECT *
FROM BASKET_A;

SELECT *
FROM BASKET_B;

-- INNER JOIN
SELECT *
FROM BASKET_A
INNER JOIN BASKET_B
ON FRUIT_A = FRUIT_B;

-- LEFT JOIN
SELECT *
FROM BASKET_A
LEFT JOIN BASKET_B
ON FRUIT_A = FRUIT_B;

-- SELECT ROWS FROM THE LEFT TABLE THAT DO NOT HAVE MATCHING ROWS IN THE RIGHT TABLE
SELECT *
FROM BASKET_A
LEFT JOIN BASKET_B
ON FRUIT_A = FRUIT_B
WHERE FRUIT_B IS NULL;

-- RIGHT JOIN
SELECT *
FROM BASKET_A
RIGHT JOIN BASKET_B
ON FRUIT_A = FRUIT_B;

-- SELECT ROWS FROM THE RIGHT TABLE THAT DO NOT HAVE MATCHING ROWS IN THE LEFT TABLE
SELECT *
FROM BASKET_A
RIGHT JOIN BASKET_B
ON FRUIT_A = FRUIT_B
WHERE FRUIT_A IS NULL;

-- FULL OUTER JOIN
SELECT *
FROM BASKET_A
FULL OUTER JOIN BASKET_B
ON FRUIT_A = FRUIT_B;

-- RETURN ROWS IN A TABLE THAT DO NOT HAVE MATCHING ROWS IN THE OTHER
SELECT *
FROM BASKET_A
FULL OUTER JOIN BASKET_B
ON FRUIT_A = FRUIT_B
WHERE FRUIT_A IS NULL OR FRUIT_B IS NULL;

-- CROSS JOIN
SELECT *
FROM BASKET_A
CROSS JOIN BASKET_B;

SELECT *
FROM BASKET_B
CROSS JOIN BASKET_A;

SELECT *
FROM BASKET_A, BASKET_B;

SELECT *
FROM BASKET_A
INNER JOIN BASKET_B
ON TRUE;

-- NATURAL JOIN
SELECT *
FROM BASKET_A
NATURAL JOIN BASKET_B; -- [INNER, LEFT, RIGHT]

-- CREATE A NEW EMPLOYEE TABLE
CREATE TABLE EMPLOYEE (EMPLOYEE_ID INT PRIMARY KEY,
					   FIRST_NAME VARCHAR (255) NOT NULL,
          	           LAST_NAME VARCHAR (255) NOT NULL,
				 	   MANAGER_ID INT,
					   FOREIGN KEY (MANAGER_ID) 
					   REFERENCES EMPLOYEE (EMPLOYEE_ID) 
					   ON DELETE CASCADE);
INSERT INTO EMPLOYEE (EMPLOYEE_ID,
				      FIRST_NAME,
					  LAST_NAME,
					  MANAGER_ID)
VALUES (1, 'WINDY', 'HAYS', NULL),
	   (2, 'AVA', 'CHRISTENSEN', 1),
	   (3, 'HASSAN', 'CONNER', 1),
	   (4, 'ANNA', 'REEVES', 2),
	   (5, 'SAU', 'NORMAN', 2),
	   (6, 'KELSIE', 'HAYS', 3),
	   (7, 'TORY', 'GOFF', 3),
	   (8, 'SALLEY', 'LESTER', 3);
	   
SELECT *
FROM EMPLOYEE;

-- SELF JOIN
SELECT E.FIRST_NAME || ' ' || E.LAST_NAME AS EMPLOYEE_NAME,
	   M.FIRST_NAME || ' ' || M.LAST_NAME AS MANAGER_NAME
FROM EMPLOYEE E
INNER JOIN EMPLOYEE M
ON M.EMPLOYEE_ID = E.MANAGER_ID
ORDER BY MANAGER_NAME;

SELECT E.FIRST_NAME || ' ' || E.LAST_NAME AS EMPLOYEE_NAME,
	   M.FIRST_NAME || ' ' || M.LAST_NAME AS MANAGER_NAME
FROM EMPLOYEE E
LEFT JOIN EMPLOYEE M
ON M.EMPLOYEE_ID = E.MANAGER_ID
ORDER BY MANAGER_NAME;

SELECT E.FIRST_NAME || ' ' || E.LAST_NAME AS EMPLOYEE_NAME,
	   M.FIRST_NAME || ' ' || M.LAST_NAME AS MANAGER_NAME
FROM EMPLOYEE E
FULL OUTER JOIN EMPLOYEE M
ON M.EMPLOYEE_ID = E.MANAGER_ID
ORDER BY MANAGER_NAME;

